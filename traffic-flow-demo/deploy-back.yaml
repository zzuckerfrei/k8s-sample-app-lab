# Backend App (App3) Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-app
  namespace: flash
  labels:
    app: backend-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend-app
  template:
    metadata:
      labels:
        app: backend-app
    spec:
      containers:
      - name: backend
        image: python:3.9-alpine
        ports:
        - containerPort: 9000
        command: ["/bin/sh", "-c"]
        args:
        - |
          pip install flask requests && \
          cat > /app.py << 'EOF'
          from flask import Flask, jsonify, request
          import requests
          import time
          import sys
          
          app = Flask(__name__)
          
          @app.route('/', methods=['GET'])
          def handle_request():
              print("Backend received request", file=sys.stderr)
              print(f"Request headers: {dict(request.headers)}", file=sys.stderr)
              
              try:
                  # Call GitHub
                  github_url = "https://github.com"
                  print(f"Calling external service at {github_url}", file=sys.stderr)
                  response = requests.get(github_url, timeout=10)
                  return f"Backend: Successfully called GitHub. Status code: {response.status_code}"
              except Exception as e:
                  print(f"Error: {str(e)}", file=sys.stderr)
                  return f"Backend: Error calling GitHub: {str(e)}"
          
          if __name__ == '__main__':
              print("Starting backend server...", file=sys.stderr)
              app.run(host='0.0.0.0', port=9000)
          EOF
          python /app.py
